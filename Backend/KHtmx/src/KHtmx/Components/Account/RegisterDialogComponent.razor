@using KHtmx.Models
@using KHtmx.Components.Account.Data
@inject LinkGenerator LinkGenerator

@* ReSharper disable once Blazor.EditorRequired *@
<SelfClosingDialogComponent
    Id="register-dialog"
    class="p-4 rounded-xl bg-gray-800">

    <!-- TODO: Improve the visual design of this form -->
    <form
        class="flex flex-col gap-6"
        hx-post="@LinkGenerator.GetPathByName(AccountEndpoints.Register.EndpointName)"
        hx-target="#register-dialog"
        hx-swap="outerHTML">
        @if (ValidationFailures is not [])
        {
            <ul>
                @foreach (var failure in ValidationFailures)
                {
                    <li class="text-invalid">
                        @failure.ErrorMessage
                    </li>
                }
            </ul>
        }

        <AntiforgeryToken />

        @* <div class="flex flex-col md:flex-row gap-6"> *@
        <!-- username input -->
        <LabelledInput
            Id="register-dialog_username"
            Label="Username"
            name="username"
            type="text"
            autocomplete="username"
            class="p-2"
            autofocus
            required
            value="@FormData?.Username"
            aria-invalid="@ValidationFailures.PropertyHasErrors(nameof(FormData.Username))"
        />

        <!-- email input -->
        <LabelledInput
            Id="register-dialog_email"
            Label="Email"
            name="email"
            type="email"
            autocomplete="email"
            class="p-2" 
            required
            value="@FormData?.Email"
            aria-invalid="@ValidationFailures.PropertyHasErrors(nameof(FormData.Email))"
        />
        @* </div> *@
        
        <div class="flex flex-col md:flex-row gap-6">
            <!-- FirstName input -->
            <LabelledInput
                Id="register-dialog_firstName"
                Label="First Name"
                name="firstName"
                type="text"
                autocomplete="given-name"
                class="p-2"
                value="@FormData?.FirstName"
                required
            />

            <!-- LastName input -->
            <LabelledInput
                Id="register-dialog_lastName"
                Label="Last Name"
                name="lastName"
                type="text"
                autocomplete="family-name"
                class="p-2"
                value="@FormData?.LastName"
                required
            />
        </div>

        <div class="flex flex-col md:flex-row gap-6">
            <!-- Password input -->
            <LabelledInput
                Id="register-dialog_password"
                Label="Password"
                name="password"
                type="password"
                autocomplete="new-password"
                class="p-2"
                required 
            />

            <!-- ConfirmPassword input -->
            <LabelledInput
                Id="register-dialog_confirmPassword"
                Label="Confirm Password"
                name="confirmPassword"
                type="password"
                autocomplete="new-password"
                class="p-2"
                required 
            />
        </div>

        <button
            class="bg-action rounded-md mx-auto px-4 py-2 text-white hover:bg-action-hover focus-visible:bg-action-hover"
            type="submit">
            Register
        </button>
    </form>
</SelfClosingDialogComponent>

@code
{
    [Parameter] public ValidationFailureCollection ValidationFailures { get; set; } = [];
    
    [Parameter] public RegisterFormDto? FormData { get; set; }
}
