@using FluentValidation.Results
@inject LinkGenerator LinkGenerator

@* ReSharper disable once Blazor.EditorRequired *@
<SelfClosingDialogComponent
    Id="login-dialog">
    
    @if (ValidationFailures is not [])
    {
        @foreach(var failure in ValidationFailures)
        {
            <p class="text-red-800">@failure.ErrorMessage</p>
        }
    }
    <form
        hx-post="@LinkGenerator.GetPathByName(AccountEndpoints.Login.EndpointName)"
        hx-target="#login-dialog"
        hx-swap="outerHTML swap:200ms"
        >
        <AntiforgeryToken/>

        <!-- Username Input-->
        <input
            id="login-dialog__username"
            autofocus
            type="text"
            placeholder="Username"
            name="username"
            hx-preserve
            autocomplete="username"/>

        <!-- Password Input-->
        <input
            id="login-dialog__password"
            type="password"
            placeholder="Password"
            name="password"
            autocomplete="current-password"/>

        <!-- Remember Me Input-->
        <label
            for="login-dialog__remember-me">
            Remember me
        </label>

        <input
            id="login-dialog__remember-me"
            type="checkbox"
            name="rememberMe"
            value="true"
            hx-preserve
            placeholder="Remember me">

        <!-- Why is this necessary, AspNetCore >_> -->
        <input
            type="hidden"
            name="rememberMe"
            value="false"/>

        <!-- Login Button -->
        <button
            type="submit">
            Login
        </button>
    </form>
</SelfClosingDialogComponent>

@code {

    [Parameter]
    public IReadOnlyList<ValidationFailure> ValidationFailures { get; set; } = [];
}
