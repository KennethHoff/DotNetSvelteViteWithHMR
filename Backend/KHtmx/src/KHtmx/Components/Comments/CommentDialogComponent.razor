@using KHtmx.Persistence
@using Microsoft.EntityFrameworkCore
@using KHtmx.Comments
@using Humanizer
@inject KhDbContext DbContext
@inject LinkGenerator LinkGenerator

@* ReSharper disable once Blazor.EditorRequired *@
<SelfClosingDialogComponent
    Id="comment_dialog">
    <div
        id="comment_dialog-body">
        @if (_comment is not null)
        {
            <header>
                Written by @_comment.AuthorFirstName @_comment.AuthorLastName
                <time
                    datetime="@_comment.Timestamp"
                    title="@_comment.Timestamp.ToString("F")">
                    @_comment.Timestamp.Humanize()
                </time>
            </header>
            <p>
                @_comment.Text
            </p>

            <div
                class="p-4">
                <!-- Delete Button-->
                <button
                    type="button"
                    class="bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-dotted focus:outline-blue-500"
                    hx-delete="@LinkGenerator.GetPathByName(CommentEndpoints.DeleteComment.EndpointName, new { id = _comment.Id })"
                    hx-on="htmx:afterRequest:htmx.trigger('#comment_dialog', 'close')">
                    Delete
                </button>

                <!-- Edit Button-->
                <button
                    type="button"
                    class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-dotted focus:outline-red-500"
                    hx-get="@LinkGenerator.GetPathByName(CommentEndpoints.GetCommentEditForm.EndpointName, new { id = _comment.Id })"
                    hx-target="#comment_dialog-body">
                    Edit
                </button>
            </div>
        }
        else
        {
            <header>
                <h1>Comment not found</h1>
            </header>
        }
    </div>
</SelfClosingDialogComponent>

@code
{
    [Parameter, EditorRequired]
    public Guid Id { get; set; }

    private CommentDialogDto? _comment;

    protected override async Task OnInitializedAsync()
    {
        _comment = await DbContext.Comments
            .Where(c => c.Id == Id)
            .Select(c => new CommentDialogDto
            {
                Text = c.Text,
                Id = c.Id,
                Timestamp = c.Timestamp,
                AuthorFirstName = c.Author.FirstName,
                AuthorLastName = c.Author.LastName,
            })
            .FirstOrDefaultAsync();
    }
}
