@using KHtmx.Persistence
@using Microsoft.EntityFrameworkCore
@using Humanizer
@using KHtmx.Components.Comments.Data
@using KHtmx.Domain.People
@using Microsoft.AspNetCore.Identity
@inject KhDbContext DbContext
@inject LinkGenerator LinkGenerator
@inject UserManager<KhtmxUser> UserManager
@inject IHttpContextAccessor HttpContextAccessor

@* ReSharper disable once Blazor.EditorRequired *@
<SelfClosingDialogComponent Id="comment_dialog" class="p-4 rounded-xl bg-gray-800">
    <div
        id="comment_dialog-body">
        @if (_comment is not null)
        {
            <header>
                Written by @_comment.AuthorFirstName @_comment.AuthorLastName
                <time
                    datetime="@_comment.Timestamp"
                    title="@_comment.Timestamp.ToString("F")">
                    @_comment.Timestamp.Humanize()
                </time>
            </header>
            <p>
                @_comment.Text
            </p>

            @if (_canEdit)
            {
                <div
                    class="p-4">
                    <ActionButton
                        type="button"
                        Class="bg-action hover:bg-action-active focus:bg-action-active"
                        hx-get="@LinkGenerator.GetPathByName(CommentEndpoints.GetCommentEditForm.EndpointName, new { id = _comment.Id })"
                        hx-target="#comment_dialog-body"
                    >
                        Edit
                    </ActionButton>
                    <!-- TODO: Add "Escape goes back to dialog" functionality -->
                    <!-- TODO: Figure out why closing the dialog (Escape or click outside) correctly adjusts focus, but doing an action doesn't([Edit -> Change -> Edit] or Delete) -->
                    
                    <ActionButton
                        type="button"
                        Class="bg-invalid hover:bg-invalid-active focus:bg-invalid-active"
                        hx-delete="@LinkGenerator.GetPathByName(CommentEndpoints.DeleteComment.EndpointName, new { id = _comment.Id })"
                        hx-on::after-request="htmx.trigger('#comment_dialog', 'close')"
                    >
                        Delete
                    </ActionButton>
                </div>
            }
        }
        else
        {
            <header>
                <h1>Comment not found</h1>
            </header>
        }
    </div>
</SelfClosingDialogComponent>

@code
{
    [Parameter, EditorRequired] public Guid Id { get; set; }

    private CommentDialogDto? _comment;

    private bool _canEdit;

    protected override async Task OnInitializedAsync()
    {
        _comment = await DbContext.Comments
            .Where(c => c.Id == Id)
            .Select(c => new CommentDialogDto
            {
                Text = c.Text,
                Id = c.Id,
                Timestamp = c.Timestamp,
                AuthorFirstName = c.Author.FirstName,
                AuthorLastName = c.Author.LastName,
                AuthorId = c.AuthorId
            })
            .FirstOrDefaultAsync();

        if (_comment is null)
        {
            return;
        }

        if (HttpContextAccessor.HttpContext is not { } httpContext)
        {
            return;
        }

        if (await UserManager.GetUserAsync(httpContext.User) is not { } user)
        {
            return;
        }

        _canEdit = user.Id == _comment.AuthorId;
    }
}
