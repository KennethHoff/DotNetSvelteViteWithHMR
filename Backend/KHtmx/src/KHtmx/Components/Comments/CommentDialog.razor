@using KHtmx.Domain.Comments
@using KHtmx.Persistence
@using Microsoft.EntityFrameworkCore
@using Humanizer
@using KHtmx.Comments
@inject KhDbContext DbContext

@* ReSharper disable once Blazor.EditorRequired *@
<SelfClosingDialog
    Id="comment_dialog">
    <div
        id="comment_dialog-body">
        @if (_comment is not null)
        {
            <header>
                Written by @_comment.Author.Name
                <time
                    datetime="@_comment.Timestamp"
                    title="@_comment.Timestamp.ToString("F")">
                    @_comment.Timestamp.Humanize()
                </time>
            </header>
            <p>
                @_comment.Text
            </p>

            <div
                class="p-4">
                <!-- Delete Button-->
                <button
                    type="button"
                    class="bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-dotted focus:outline-blue-500"
                    hx-delete="@($"{CommentsEndpointExtensions.CommentsEndpoint}/{_comment.Id}")"
                    hx-on="htmx:afterRequest:htmx.trigger('#comment_dialog', 'close')">
                    Delete
                </button>

                <!-- Edit Button-->
                <button
                    type="button"
                    class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-dotted focus:outline-red-500"
                    hx-get="@($"{CommentsEndpointExtensions.CommentsEndpoint}/{_comment.Id}/edit")"
                    hx-target="#comment_dialog-body">
                    Edit
                </button>
            </div>
        }
        else
        {
            <header>
                <h1>Comment not found</h1>
            </header>
        }
    </div>
</SelfClosingDialog>

@code
{
    [Parameter, EditorRequired]
    public CommentId Id { get; set; }

    private Comment? _comment;

    protected override async Task OnInitializedAsync()
    {
        _comment = await DbContext.Comments
            .FirstOrDefaultAsync(x => x.Id == Id);
    }
}
